# Multi-stage Juan Eric JHuarez
# 1) Node image for building frontend assets
# 2) nginx stage to serve frontend assets

# Name the node stage "builder"
FROM node:10 AS builder
# Set working directory
WORKDIR /app
# Copy all files from current directory to working dir in image
COPY . .
# install node modules and build assets
RUN npm i && npm run build

# nginx state for serving content
FROM nginx:latest
# Set working directory to nginx asset directory
WORKDIR /usr/share/nginx/html
# Remove default nginx static assets
RUN rm -rf ./*
# Copy static assets from builder stage
COPY --from=builder /app/dist/encuestas .
# Containers run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]



# Configuración Dockerfile creada By Ing. Juan Eric Juárez Jaramillo & Ing. Miguel Angel Camacho
FROM maven:3.8.1-jdk-8 AS build
COPY src /home/ms-conocimientos/src
COPY pom.xml /home/ms-conocimientos
RUN mvn -f /home/ms-conocimientos/pom.xml clean package

FROM openjdk:8
# WORKDIR /home
COPY --from=build /home/ms-conocimientos/target/ms-conocimientos-0.0.1-SNAPSHOT.war /usr/src/app/ms-conocimientos-0.0.1-SNAPSHOT.war



name: Release Workflow

on: [push, pull_request]

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2
        
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: juarezer7c/ms-config-server
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: juarezer7c
          password: 3cc777bb-3684-42d0-a735-e4ef8aa1ff3c

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
EXPOSE 8585
ENTRYPOINT ["java","-jar","/usr/src/app/ms-conocimientos-0.0.1-SNAPSHOT.war"]
